C:\github\py01\Etak\hr\
├── config.py                # Configuration settings (e.g., fonts, database paths, session config)
├── main.py                  # Main Flask application entry point (login, logout, index routes)
├── static\                  # Static assets (CSS, images)
│   ├── images\              # Image assets
│   │   ├── calendar-icon.png
│   │   ├── favicon.ico
│   │   ├── home-icon.png
│   │   ├── logo.png
│   │   ├── logout-icon.png
│   │   ├── timetable-icon.png
│   ├── style.css            # Application stylesheet
├── templates\               # HTML templates
│   ├── calendar.html        # HR calendar display template
│   ├── index.html           # Home page template
│   ├── login.html           # Login page template
│   ├── staff_leaves.html    # Staff leaves details template
│   ├── timetable_form.html  # Timetable generation form template
├── timetable\               # Timetable module
│   ├── __init__.py          # Blueprint initialization
│   ├── __pycache__\         # Compiled Python files (auto-generated)
│   │   ├── __init__.cpython-310.pyc
│   │   ├── routes.cpython-310.pyc
│   │   ├── utils.cpython-310.pyc
│   ├── routes.py            # Timetable routes (form, PDF generation)
│   ├── utils.py             # Timetable utilities (PDF generation logic)
├── hr_calendar\             # HR calendar module
│   ├── __init__.py          # Blueprint initialization
│   ├── __pycache__\         # Compiled Python files (auto-generated)
│   │   ├── __init__.cpython-310.pyc
│   │   ├── routes.cpython-310.pyc
│   │   ├── utils.cpython-310.pyc
│   ├── routes.py            # HR calendar routes (calendar display, PDF)
│   ├── utils.py             # HR calendar utilities (data fetching)
├── utils.py                 # General utilities (e.g., login_required, DB connections)

https://grok.com/share/bGVnYWN5_d20cc9a8-0d71-485a-b4fc-2fbf1f678a65

How to Run
Install Dependencies:
bash

Collapse

Wrap

Copy
pip install flask pyodbc reportlab holidays
Update Database Paths:
In config.py, update ACCESS_DB_PATH and SQL_DB_PATH to match your environment.
Run the Application:
bash

Collapse

Wrap

Copy
python main.py
Access at http://localhost:1088/.
Refactoring Improvements and Redundancy Check
Modular Structure:
Blueprints: Used timetable_bp and hr_calendar_bp to separate concerns, making it easier to maintain and extend.
Config: Centralized configuration in config.py to avoid hardcoding values across files.
Utils: Moved utility functions (generate_pdf, fetch_leave_data, etc.) into separate modules to keep routes clean.
Redundancy Elimination:
Database Connections: Previously, connection logic was repeated. Now, get_access_db_connection and get_sql_db_connection are single-source utilities.
Leave Queries: In fetch_leave_data, redundant SQL query logic was consolidated into execute_leave_query, reducing code duplication across the four leave types.
Imports: Removed redundant imports (e.g., datetime was imported multiple times) by placing them in the appropriate modules.
Maintainability:
Separation of Concerns: Routes handle request/response logic, utils handle business logic, and config manages settings.
Namespace Clarity: Blueprint prefixes (/timetable and /calendar) prevent route conflicts and clarify module ownership.
Template Consistency: Navigation links use url_for with blueprint names for accurate routing.
Future Upgrades:
New features can be added as additional blueprints (e.g., payroll/__init__.py, payroll/routes.py, payroll/utils.py) and registered in main.py.
Shared utilities (e.g., database helpers) can be moved to a common utils module if needed.
Code Cleanliness:
Removed unused variables and redundant comments.
Standardized naming (e.g., timetable_form vs. display_calendar) for consistency.

*****************************************************************
pip install google-auth google-auth-oauthlib google-api-python-client